---
- hosts: vault:consul
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  vars:
    - os_environment:
      - key: CONSUL_HTTP_ADDR
        value: http://127.0.0.1:7500
  tasks:
    - name: populate /etc/environment (permanent env var set)
      lineinfile:
        path: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value}}"
      with_items: "{{ os_environment }}"

- hosts: vault:consul
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  vars:
    - new_user: "{{ consul_user }}"
    - new_group: "{{ consul_user }}"
    - base_user: "{{ user }}"
    - binary_filename: "{{ consul_binary }}"
    - service_filename: "{{ consul_user }}.service"
  tasks:
    - name: Create new user and group on Consul servers and software folders
      include_role:
        name: init-servers
    

#Copy Consul server config file to Consul servers
- hosts: consul
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  tasks:
  - name: Copy the Consul server config file from build pack location to config folder on server
    ansible.builtin.copy:
      src: "config-files/consul.hcl" #"{{ build_dir }}/{{ service_filename }}"
      dest: "{{ consul_config_dir }}{{ consul_config_filename }}" #must match folder name created in the role above
      mode: 0640
      owner: "{{ consul_user }}"
      group: "{{ consul_user }}"

- hosts: vault
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  vars:
    - new_user: "{{ vault_user }}"
    - new_group: "{{ vault_user }}"
    - base_user: "{{ user }}"
    - binary_filename: "{{ vault_binary }}"
    - service_filename: "{{ vault_user }}.service"
  tasks:
    - name: Create new user and group on Vault servers and software folders
      include_role:
        name: init-servers

#Copy Consul client config file to Vault servers
- hosts: vault
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  tasks:
  - name: Copy the Consul client config file from build pack location to config folder on Vault servers
    ansible.builtin.copy:
      src: "config-files/vault-consul.hcl" #"{{ build_dir }}/{{ service_filename }}"
      dest: "{{ consul_config_dir }}{{ consul_config_filename }}" #must match folder name created in the role above
      mode: 0640
      owner: "{{ consul_user }}"
      group: "{{ consul_user }}"

#Copy Vault server config file to Vault servers
- hosts: vault
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  tasks:

  - name: Copy the Vault server config file from build pack location to config folder on Vault servers
    ansible.builtin.copy:
      src: "config-files/vault.hcl" #"{{ build_dir }}/{{ service_filename }}"
      dest: "{{ vault_config_dir }}{{ vault_config_filename }}" #must match folder name created in the role above
      mode: 0640
      owner: "{{ vault_user }}"
      group: "{{ vault_user }}"

  - name: Update Vault node address in config file
    lineinfile:
      dest: "{{ vault_config_dir }}{{ vault_config_filename }}"
      regexp: "{{ config_text.regexp }}"
      line: "{{ config_text.line }}"
      backrefs: true
    loop:
      - { regexp: '^cluster_addr(\s*=\s*)(.*?)$', line: 'cluster_addr\1"http://{{ inventory_hostname }}:8201"' }
      - { regexp: '^api_addr(\s*=\s*)(.*?)$', line: 'api_addr\1"http://{{ inventory_hostname }}:8200"' }
    loop_control:
      loop_var: config_text

- hosts: vault:consul
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  tasks:
    - name: Enable consul service and start
      ansible.builtin.service:
        name: "{{ consul_user }}"
        enabled: yes
        state: started
        daemon_reload: true
  
- hosts: vault
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  tasks:
    - name: Enable vault service
      ansible.builtin.service:
        name: "{{ vault_user }}"
        enabled: yes
        state: stopped
        daemon_reload: true

- hosts: ansible #Only start Vault on the primary server which is the one the initialise operation running next will target
  gather_facts: no
  remote_user: "{{ user }}"
  become: yes
  tasks:
    - name: Enable vault service
      ansible.builtin.service:
        name: "{{ vault_user }}"
        state: started
        daemon_reload: true
    - name: Run CRON job to auto unseal Vault 50 seconds after a reboot (allows other servers time to boot up first)
      cron:
        name: "vault_auto_unseal"
        user: "{{ user }}"
        special_time: "reboot"
        job: "sleep 50 && /home/azureuser/.local/bin/ansible-playbook /home/azureuser/ansible/startup.yml >/tmp/vault-auto-unseal.log 2>&1"
        state: present
